{"ast":null,"code":"export var AppOwnership;\n\n(function (AppOwnership) {\n  AppOwnership[\"Standalone\"] = \"standalone\";\n  AppOwnership[\"Expo\"] = \"expo\";\n  AppOwnership[\"Guest\"] = \"guest\";\n})(AppOwnership || (AppOwnership = {}));\n\nexport var ExecutionEnvironment;\n\n(function (ExecutionEnvironment) {\n  ExecutionEnvironment[\"Bare\"] = \"bare\";\n  ExecutionEnvironment[\"Standalone\"] = \"standalone\";\n  ExecutionEnvironment[\"StoreClient\"] = \"storeClient\";\n})(ExecutionEnvironment || (ExecutionEnvironment = {}));\n\nexport var UserInterfaceIdiom;\n\n(function (UserInterfaceIdiom) {\n  UserInterfaceIdiom[\"Handset\"] = \"handset\";\n  UserInterfaceIdiom[\"Tablet\"] = \"tablet\";\n  UserInterfaceIdiom[\"Unsupported\"] = \"unsupported\";\n})(UserInterfaceIdiom || (UserInterfaceIdiom = {}));","map":{"version":3,"sources":["../src/Constants.types.ts"],"names":[],"mappings":"AAAA,OAAA,IAAY,YAAZ;;AAAA,CAAA,UAAY,YAAZ,EAAwB;AACtB,EAAA,YAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACA,EAAA,YAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,YAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACD,CAJD,EAAY,YAAY,KAAZ,YAAY,GAAA,EAAA,CAAxB;;AAMA,OAAA,IAAY,oBAAZ;;AAAA,CAAA,UAAY,oBAAZ,EAAgC;AAC9B,EAAA,oBAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,oBAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACA,EAAA,oBAAA,CAAA,aAAA,CAAA,GAAA,aAAA;AACD,CAJD,EAAY,oBAAoB,KAApB,oBAAoB,GAAA,EAAA,CAAhC;;AAMA,OAAA,IAAY,kBAAZ;;AAAA,CAAA,UAAY,kBAAZ,EAA8B;AAC5B,EAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,kBAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,kBAAA,CAAA,aAAA,CAAA,GAAA,aAAA;AACD,CAJD,EAAY,kBAAkB,KAAlB,kBAAkB,GAAA,EAAA,CAA9B","sourcesContent":["export enum AppOwnership {\n  Standalone = 'standalone',\n  Expo = 'expo',\n  Guest = 'guest',\n}\n\nexport enum ExecutionEnvironment {\n  Bare = 'bare',\n  Standalone = 'standalone',\n  StoreClient = 'storeClient',\n}\n\nexport enum UserInterfaceIdiom {\n  Handset = 'handset',\n  Tablet = 'tablet',\n  Unsupported = 'unsupported',\n}\n\nexport interface IOSManifest {\n  buildNumber: string;\n  platform: string;\n  model: string;\n  userInterfaceIdiom: UserInterfaceIdiom;\n  systemVersion: string;\n  [key: string]: any;\n}\n\nexport interface AndroidManifest {\n  versionCode: number;\n  [key: string]: any;\n}\n\nexport interface WebManifest {\n  [key: string]: any;\n}\n\nexport interface AppManifest {\n  name?: string;\n  description?: string;\n  slug?: string;\n  sdkVersion?: string;\n  version?: string;\n  /** Published Apps Only */\n  releaseId?: string;\n  revisionId?: string;\n  releaseChannel?: string;\n  orientation?: string;\n  primaryColor?: string;\n  icon?: string;\n  notification?: {\n    icon?: string;\n    color?: string;\n    [key: string]: any;\n  };\n  loading?: {\n    icon?: string;\n    [key: string]: any;\n  };\n  entryPoint?: string;\n  packagerOpts?: {\n    hostType?: string;\n    dev?: boolean;\n    strict?: boolean;\n    minify?: boolean;\n    urlType?: string;\n    urlRandomness?: string;\n    lanType?: string;\n    [key: string]: any;\n  };\n  xde?: boolean;\n  developer?: {\n    tool?: string;\n    [key: string]: any;\n  };\n  bundleUrl: string;\n  debuggerHost?: string;\n  mainModuleName?: string;\n  logUrl?: string;\n  [key: string]: any;\n}\n\nexport interface PlatformManifest {\n  ios?: IOSManifest;\n  android?: AndroidManifest;\n  web?: WebManifest;\n  detach?: {\n    scheme?: string;\n    [key: string]: any;\n  };\n  logUrl?: string;\n  scheme?: string;\n  hostUri?: string;\n  developer?: string;\n  [key: string]: any;\n}\n\nexport interface NativeConstants {\n  name: 'ExponentConstants';\n  appOwnership: AppOwnership | null;\n  debugMode: boolean;\n  deviceName?: string;\n  deviceYearClass: number | null;\n  executionEnvironment: ExecutionEnvironment;\n  experienceUrl: string;\n  // only nullable on web\n  expoRuntimeVersion: string | null;\n  /**\n   * The version string of the Expo client currently running.\n   * Returns `null` on and bare workflow and web.\n   */\n  expoVersion: string | null;\n  isDetached?: boolean;\n  intentUri?: string;\n  installationId: string;\n  isDevice: boolean;\n  isHeadless: boolean;\n  linkingUri: string;\n  nativeAppVersion: string | null;\n  nativeBuildVersion: string | null;\n  manifest: AppManifest;\n  sessionId: string;\n  statusBarHeight: number;\n  systemFonts: string[];\n  systemVersion?: number;\n  platform?: PlatformManifest;\n  [key: string]: any;\n\n  getWebViewUserAgentAsync: () => Promise<string | null>;\n}\n\nexport interface Constants extends NativeConstants {\n  deviceId?: string;\n  linkingUrl?: string;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}